version: "3"
networks:
  shared_network:
    name: shared_network
    driver: bridge
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - shared_network
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - shared_network
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8050:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
    depends_on:
      - kafka
    networks:
      - shared_network
  streetvision-webapp:
    build:
      context: ./streetvision-webapp
      dockerfile: Dockerfile
    ports:
      - "3000:3000" # Maps port 80 from the container to 3004 on the host
    depends_on:
      - streetvision-db
      - backend-service
    volumes:
      - ./streetvision-webapp:/usr/src/app
    networks:
      shared_network:
        aliases:
          - ui
  streetvision-db:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - ./appldb-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASS}
    networks:
      - shared_network
  backend-service:
    build:
      context: ./backend-service
    volumes:
      - ./backend-service:/usr/src/app
    ports:
      - "9000:9000" # note to self, move all services to 9000 range
    # depends_on:
    # - kafka
    # - workflow-service
    environment:
      - MONGODB_URI=mongodb://streetvision-db:27017/streetvision?authSource=admin
      # - KAFKA_BROKER_URL=kafka:29092
      # - WORKFLOW_SERVICE_URL=http://workflow-service:9000
    networks:
      shared_network:
        aliases:
          - backend
  es8:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    container_name: es8
    environment:
      - "node.name=es8"
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "xpack.security.enabled=false"
      - "xpack.security.enrollment.enabled=false" # Enable enrollment - to enable later
    volumes:
      # - ./elasticsearch/config:/usr/share/elasticsearch/config
      - ./es-data:/usr/share/elasticsearch/data # Persist data
    ports:
      - "9200:9200" # Expose Elasticsearch HTTP port
      - "9300:9300" # Expose Elasticsearch TCP port
    networks:
      - shared_network

  kibana8:
    image: docker.elastic.co/kibana/kibana:8.12.2
    container_name: kibana8
    environment:
      - "ELASTICSEARCH_HOSTS=http://es8:9200"
    ports:
      - "5601:5601" # Expose Kibana port
    networks:
      - shared_network
    depends_on:
      - es8
